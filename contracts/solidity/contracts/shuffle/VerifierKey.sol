// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

library VerifierKey {
    function load(uint256 vk, uint256 pi) internal pure {
        assembly {
            // The commitments of the selectors (8).
            mstore(add(vk, 0x0), 18441689501629436248217635582684482981452381323212513784199020140184451934616)
            mstore(add(vk, 0x20), 3964092095813745029257332617007441475061215853165784739492853140567265617756)
            mstore(add(vk, 0x40), 13775242509681705610360709380418880107758968182308488753069136915415263516148)
            mstore(add(vk, 0x60), 6688005071183326650674081101986956408057738379379522101772054966494251972834)
            mstore(add(vk, 0x80), 7248271496702836664073986876855322076295445259420143895169554776878969222250)
            mstore(add(vk, 0xa0), 16282500077030537204267249676573848348344462724095706514952317995653763506332)
            mstore(add(vk, 0xc0), 20273063536617601655286898270311907157912375262828098594029645158827674309106)
            mstore(add(vk, 0xe0), 11158177269469516474745009924552034766749478043060854385760861003136851285984)
            mstore(add(vk, 0x100), 1764901668189953637547165932841014045298354444321798901674006217763646232845)
            mstore(add(vk, 0x120), 19039500158410372855017715075335598265811437136305013921632409485452832371132)
            mstore(add(vk, 0x140), 1764901668189953637547165932841014045298354444321798901674006217763646232845)
            mstore(add(vk, 0x160), 19039500158410372855017715075335598265811437136305013921632409485452832371132)
            mstore(add(vk, 0x180), 6138085335997852333477790652082738216736717202631470792438275163671968657755)
            mstore(add(vk, 0x1a0), 14774429519383057589401030838712051316524985586130801628656419594286774276898)
            mstore(add(vk, 0x1c0), 20303759414628996959493536284893746439102855002611468745523922389924932407175)
            mstore(add(vk, 0x1e0), 15210393159166346333033485893455757613519506299484183239793103478062544847434)

            // The commitments of perm1, perm2, ..., perm_{n_wires_per_gate}.
            mstore(add(vk, 0x200), 17531195792540264807653520926877498518442904161714765556021115830135219327431)
            mstore(add(vk, 0x220), 19504691634108172233821262135481314056905494985822826353912877004459163060830)
            mstore(add(vk, 0x240), 15106466580329323416749386355716760266397005369125003254451674293534642438028)
            mstore(add(vk, 0x260), 20905997283502719921814189939280301632995021346767263237346860729512316639278)
            mstore(add(vk, 0x280), 2546435334551058689199269213146675693284319597466897545270675919675120038406)
            mstore(add(vk, 0x2a0), 9674248939530972721900619936588592670319479628195772437629917765678124118409)
            mstore(add(vk, 0x2c0), 18070127074759464362945349080994614826743914564068935437527115533138847893691)
            mstore(add(vk, 0x2e0), 5270144859652504612560332025078117271183675762441865752577893364107409604139)
            mstore(add(vk, 0x300), 11313275509361202393346082122662035068980418914006536478134594516186787853080)
            mstore(add(vk, 0x320), 20863214735276547055277573503085874591746504022330351467828765416646721000419)

            // The commitment of the boolean selector.
            mstore(add(vk, 0x340), 15390841443338199301991162755970987161350343129796580512990949073605931144261)
            mstore(add(vk, 0x360), 6727798770872649101510905064662071296793557956295181484123183868344039762092)

            // The commitments of the preprocessed round key selectors.
            mstore(add(vk, 0x380), 0)
            mstore(add(vk, 0x3a0), 0)
            mstore(add(vk, 0x3c0), 0)
            mstore(add(vk, 0x3e0), 0)
            mstore(add(vk, 0x400), 0)
            mstore(add(vk, 0x420), 0)
            mstore(add(vk, 0x440), 0)
            mstore(add(vk, 0x460), 0)

            // The commitment of the ecc selector.
            mstore(add(vk, 0x480), 6663593670485057857845727953600322832561219124057680703055165898580652923424)
            mstore(add(vk, 0x4a0), 3850660213218758041941697986010072807317694997025990418165263459417711324973)

            // The commitments of the shuffle generator selectors.
            mstore(add(vk, 0x4c0), 18350296486580731883972731521573568591909895046545988689508245504056094426982)
            mstore(add(vk, 0x4e0), 11540183154329630328402957667440990636917289383856511176434576140876438566424)
            mstore(add(vk, 0x500), 21027461065291477988894370436038479557642718167744743819097910703787426665692)
            mstore(add(vk, 0x520), 21886149067720143019209584569555012836084739542528280690433514503336583619053)
            mstore(add(vk, 0x540), 171836543143406632879832795699357359825621619039211690412298276147179968767)
            mstore(add(vk, 0x560), 265448826161228441538218419991802347767343509736498217166130051054881812827)
            mstore(add(vk, 0x580), 8744659311417192046975592782388436809210249779070815593326740582618200744908)
            mstore(add(vk, 0x5a0), 4122584842189558444331517532186187225171955283852945347562711823983652597337)
            mstore(add(vk, 0x5c0), 17059679712648970846381739333628535593950013180260959681477036319716308886211)
            mstore(add(vk, 0x5e0), 13842681262699023907190281216439101240126757708489286381105954999501536793589)
            mstore(add(vk, 0x600), 13606635244709203701867106779399212600640545243277108501489744444522487823853)
            mstore(add(vk, 0x620), 21536203062535223706827723723119592319717345624743617607646788223182834497011)
            mstore(add(vk, 0x640), 9071109865184577041330049615376756572941575691942093671233159639458251527580)
            mstore(add(vk, 0x660), 9420324840300977975941669894664205090504499886868068044632710032694434890100)
            mstore(add(vk, 0x680), 17249712188856057330465600365556757967590539085444885502422186414834199278468)
            mstore(add(vk, 0x6a0), 13785751607826800179505357675262432102226688899491195458500114170515654940574)
            mstore(add(vk, 0x6c0), 16874249841641771355322221974582042262349264950960294950334418093636772307679)
            mstore(add(vk, 0x6e0), 6033566825049056607080881715048932870899081668920361688992456913533946152855)
            mstore(add(vk, 0x700), 17334216366275751934998847251691520706885689052062138591651216195755808071758)
            mstore(add(vk, 0x720), 6059102363555696133982355872333139881150534999197226728984208441629575152713)
            mstore(add(vk, 0x740), 21128558252710492061394384371725090380529733067231273518577178572074208042043)
            mstore(add(vk, 0x760), 10346148201841399545915484289135247531264830655352102649249505294881164410529)
            mstore(add(vk, 0x780), 3434173809563803007502479141808155634825078030342443978927472788962579413816)
            mstore(add(vk, 0x7a0), 2683121219114044464930167999976916627177514033849173286499560039330792333091)

            // The Anemoi generator.
            mstore(add(vk, 0xac0), 0)

            // The Anemoi generator's inverse.
            mstore(add(vk, 0xae0), 0)

            // `n_wires_per_gate` different quadratic non-residue in F_q-{0}.
            mstore(add(vk, 0xb00), 1)
            mstore(add(vk, 0xb20), 21509278299504349099462204191118037118107610078220221266349290695035863440714)
            mstore(add(vk, 0xb40), 14591765506482671446560885548197471556272316625185371414625730123191650159626)
            mstore(add(vk, 0xb60), 20673134221338176908533409120033688652684004715917049623995757576703454366048)
            mstore(add(vk, 0xb80), 13396636759903947947799315328758978480749589910059656383824201846411632979782)

            // The edwards a.
            mstore(add(vk, 0xba0), 1)

            // The domain's group generator with csSize.
            mstore(add(vk, 0xbc0), 20619701001583904760601357484951574588621083236087856586626117568842480512645)

            // The size of constraint system.
            mstore(add(vk, 0xbe0), 16384)

            /// public inputs length
            mstore(add(pi, 0x0), 416)
        }
    }
}
